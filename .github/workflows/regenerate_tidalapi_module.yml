name: Regenerate TidalApi Code

on:
  push:

permissions:
  contents: write
  pull-requests: write

jobs:
  openapi-code-generation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get link to released openapi-generator fork .jar
        id: get_release
        run: |
          REPO_OWNER="tidal-music"
          REPO_NAME="openapi-generator"
          
          # Fetch the latest release information
          curl -s -H -v "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases/latest" > release_info.json

          cat release_info.json

          # Extract the download URL for the desired asset (example: 'my-asset.zip')
          ASSET_ID=$(jq -r '.assets[] | select(.name == "openapi-generator-cli.jar") | .id' release_info.json)
          ASSET_URL=$(jq -r '.assets[] | select(.name == "openapi-generator-cli.jar") | .browser_download_url' release_info.json)

          echo "Asset URL: $ASSET_ID"
          
          # Save asset URL for the next step
          echo "::set-output name=asset_id::$ASSET_URL"

      - name: Download generator binary
        run: |
          REPO_OWNER="organization"
          REPO_NAME="another-repo"
          ASSET_ID=${{ steps.get_release.outputs.asset_id }}

          # Download the asset using the GitHub API
          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/octet-stream" \
            -o tidalapi/bin/openapi-generator-cli.jar \
            "$ASSET_ID"

      - name: Run the the TidalAPI code generation
        run: |
          cd tidalapi
          chmod +x ./bin/openapi-generator-cli.jar
          python ./bin/generate-api-files.py ./bin/generate-api-config.json
          git status
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

      - name: Commit changes
        run: |
          git config user.email "svc-github-tidal-music-tools@block.xyz"
          git config user.name "TIDAL Music Tools"
          git checkout -b tidal-music-tools/Update-Tidal-Api
          git add .
          git commit -m "Add new files via GitHub Actions"

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin tidal-music-tools/Update-Tidal-Api

      - name: Create Pull Request via API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_DATA=$(jq -n --arg title "DO NOT REVIEW - Testing :-)" \
                            --arg head "new-feature-branch" \
                            --arg base "main" \
                            --arg body "This PR was created by GitHub Actions." \
                            '{title: $title, head: $head, base: $base, body: $body}')

          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "$PR_DATA" \
            https://api.github.com/repos/${{ github.repository }}/pulls
