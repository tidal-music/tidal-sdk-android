name: Check API Spec Changes

on:
  schedule:
    # Runs at 00:00 UTC every day
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  check-api-spec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for existing PR
        id: check_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Search for open PRs that contain "Automatic Tidal API module update" in the title
          pr_data=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open")
          
          existing_pr_number=$(echo "$pr_data" | jq -r '.[] | select(.title | contains("Automatic Tidal API module update")) | .number' | head -n 1)
          
          if [ -n "$existing_pr_number" ] && [ "$existing_pr_number" != "null" ]; then
            echo "Found existing PR #$existing_pr_number"
            echo "existing_pr=true" >> $GITHUB_OUTPUT
            echo "pr_number=$existing_pr_number" >> $GITHUB_OUTPUT
            
            # Get the branch name from the PR
            pr_details=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$existing_pr_number")
            branch_name=$(echo "$pr_details" | jq -r '.head.ref')
            echo "pr_branch=$branch_name" >> $GITHUB_OUTPUT
            
            echo "Will check against branch: $branch_name"
          else
            echo "No existing PR found, will check against main branch"
            echo "existing_pr=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout PR branch if exists
        if: steps.check_pr.outputs.existing_pr == 'true'
        run: |
          git fetch origin ${{ steps.check_pr.outputs.pr_branch }}
          git checkout ${{ steps.check_pr.outputs.pr_branch }}
          echo "Using API spec from PR branch: ${{ steps.check_pr.outputs.pr_branch }}"

      - name: Download latest API spec
        run: |
          mkdir -p /tmp/api-check
          curl -s https://tidal-music.github.io/tidal-api-reference/tidal-api-oas.json -o /tmp/api-check/latest-api.json
      
      - name: Compare API specs
        id: compare
        run: |
          if cmp -s "tidalapi/bin/tidal-api.json" "/tmp/api-check/latest-api.json"; then
            echo "No changes found in the API specification"
            echo "changes_found=false" >> $GITHUB_OUTPUT
          else
            echo "Changes found in the API specification"
            echo "changes_found=true" >> $GITHUB_OUTPUT
            echo "::group::API Specification Diff"
            diff -u "tidalapi/bin/tidal-api.json" "/tmp/api-check/latest-api.json" || true
            echo "::endgroup::"
          fi

      - name: Output result
        run: |
          if [ "${{ steps.compare.outputs.changes_found }}" == "true" ]; then
            echo "Changes found - see diff above"
            if [ "${{ steps.check_pr.outputs.existing_pr }}" == "true" ]; then
                echo "Will trigger the regenerate-tidalapi-module workflow to update the existing PR"
            else
              echo "Will trigger the regenerate-tidalapi-module workflow to create a new PR"
            fi
          else
            echo "No Changes found"
          fi
          
      - name: Trigger tidalapi module code generator
        if: steps.compare.outputs.changes_found == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Use the PR branch if it exists, otherwise use the current ref
            const ref = ${{ steps.check_pr.outputs.existing_pr == 'true' }} 
              ? '${{ steps.check_pr.outputs.pr_branch }}'
              : context.ref;
              
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'regenerate-tidalapi-module.yml',
              ref: ref
            });
