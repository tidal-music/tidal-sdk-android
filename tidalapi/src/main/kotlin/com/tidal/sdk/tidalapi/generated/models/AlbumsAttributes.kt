/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.tidal.sdk.tidalapi.generated.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 *
 *
 * @param title Original title
 * @param barcodeId Barcode id (EAN-13 or UPC-A)
 * @param numberOfVolumes Number of volumes
 * @param numberOfItems Number of album items
 * @param duration Duration (ISO-8601)
 * @param explicit Indicates whether an album consist of any explicit content
 * @param popularity Album popularity (ranged in 0.00 ... 1.00). Conditionally visible
 * @param mediaTags
 * @param type Album type, e.g. single, regular album, or extended play
 * @param releaseDate Release date (ISO-8601)
 * @param copyright Copyright information
 * @param availability Defines an album availability e.g. for streaming, DJs, stems
 * @param imageLinks Represents available links to, and metadata about, an album cover images
 * @param videoLinks Represents available links to, and metadata about, an album cover videos
 * @param externalLinks Represents available links to something that is related to an album resource, but external to the TIDAL API
 */

@Serializable
data class AlbumsAttributes(

    // Original title

    @SerialName(value = "title")
    val title: kotlin.String,
    // Barcode id (EAN-13 or UPC-A)

    @SerialName(value = "barcodeId")
    val barcodeId: kotlin.String,
    // Number of volumes

    @SerialName(value = "numberOfVolumes")
    val numberOfVolumes: kotlin.Int,
    // Number of album items

    @SerialName(value = "numberOfItems")
    val numberOfItems: kotlin.Int,
    // Duration (ISO-8601)

    @SerialName(value = "duration")
    val duration: kotlin.String,
    // Indicates whether an album consist of any explicit content

    @SerialName(value = "explicit")
    val explicit: kotlin.Boolean,
    // Album popularity (ranged in 0.00 ... 1.00). Conditionally visible

    @SerialName(value = "popularity")
    val popularity: kotlin.Double,

    @SerialName(value = "mediaTags")
    val mediaTags: kotlin.collections.List<kotlin.String>,
    // Album type, e.g. single, regular album, or extended play

    @SerialName(value = "type")
    val type: AlbumsAttributes.Type,
    // Release date (ISO-8601)

    @SerialName(value = "releaseDate")
    val releaseDate: kotlin.String? = null,
    // Copyright information

    @SerialName(value = "copyright")
    val copyright: kotlin.String? = null,
    // Defines an album availability e.g. for streaming, DJs, stems

    @SerialName(value = "availability")
    val availability: kotlin.collections.List<AlbumsAttributes.Availability>? = null,
    // Represents available links to, and metadata about, an album cover images

    @SerialName(value = "imageLinks")
    val imageLinks: kotlin.collections.List<ImageLink>? = null,
    // Represents available links to, and metadata about, an album cover videos

    @SerialName(value = "videoLinks")
    val videoLinks: kotlin.collections.List<VideoLink>? = null,
    // Represents available links to something that is related to an album resource, but external to the TIDAL API

    @SerialName(value = "externalLinks")
    val externalLinks: kotlin.collections.List<ExternalLink>? = null,
) {

    /**
     * Album type, e.g. single, regular album, or extended play
     *
     * Values: ALBUM,EP,SINGLE
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "ALBUM")
        ALBUM("ALBUM"),

        @SerialName(value = "EP")
        EP("EP"),

        @SerialName(value = "SINGLE")
        SINGLE("SINGLE"),
    }

    /**
     * Defines an album availability e.g. for streaming, DJs, stems
     *
     * Values: STREAM,DJ,STEM
     */
    @Serializable
    enum class Availability(val value: kotlin.String) {
        @SerialName(value = "STREAM")
        STREAM("STREAM"),

        @SerialName(value = "DJ")
        DJ("DJ"),

        @SerialName(value = "STEM")
        STEM("STEM"),
    }
}
