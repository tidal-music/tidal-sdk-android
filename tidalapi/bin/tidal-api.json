{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "TIDAL API - Beta",
    "description" : "TIDAL API is a [JSON:API](https://jsonapi.org/) Web API that gives access to TIDAL functionality and data.",
    "termsOfService" : "https://developer.tidal.com/documentation/guidelines/guidelines-overview",
    "contact" : {
      "name" : "TIDAL Developer - Discussions",
      "url" : "https://github.com/orgs/tidal-music/discussions"
    },
    "version" : "0.1.8"
  },
  "externalDocs" : {
    "description" : "TIDAL Developer - Documentation",
    "url" : "https://developer.tidal.com/documentation"
  },
  "servers" : [ {
    "url" : "https://openapi.tidal.com/v2",
    "description" : "Production"
  } ],
  "tags" : [ {
    "name" : "albums"
  }, {
    "name" : "artistRoles"
  }, {
    "name" : "artists"
  }, {
    "name" : "artworks"
  }, {
    "name" : "playlists"
  }, {
    "name" : "providers"
  }, {
    "name" : "searchResults"
  }, {
    "name" : "searchSuggestions"
  }, {
    "name" : "searchresults"
  }, {
    "name" : "trackFiles"
  }, {
    "name" : "trackManifests"
  }, {
    "name" : "tracks"
  }, {
    "name" : "userCollections"
  }, {
    "name" : "userEntitlements"
  }, {
    "name" : "userRecommendations"
  }, {
    "name" : "users"
  }, {
    "name" : "videos"
  } ],
  "paths" : {
    "/albums/{id}" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get single album.",
        "description" : "Retrieves single album by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Album id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380836"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists, coverArt, items, providers, similarAlbums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get multiple albums.",
        "description" : "Retrieves multiple albums by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists, coverArt, items, providers, similarAlbums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        }, {
          "name" : "filter[barcodeId]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on barcodeId attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "196589525444"
            }
          },
          "example" : "196589525444"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "251380836"
            }
          },
          "example" : "251380836"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/artists" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get artists relationship (\"to-many\").",
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Album id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380836"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/coverArt" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get coverArt relationship (\"to-many\").",
        "description" : "Retrieves coverArt relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Album id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380836"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          },
          "example" : "coverArt"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/items" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get items relationship (\"to-many\").",
        "description" : "Retrieves items relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Album id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380836"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: items",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          },
          "example" : "items"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/providers" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get providers relationship (\"to-many\").",
        "description" : "Retrieves providers relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Album id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380836"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: providers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "providers"
            }
          },
          "example" : "providers"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/albums/{id}/relationships/similarAlbums" : {
      "get" : {
        "tags" : [ "albums" ],
        "summary" : "Get similarAlbums relationship (\"to-many\").",
        "description" : "Retrieves similarAlbums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Album id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380836"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: similarAlbums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "similarAlbums"
            }
          },
          "example" : "similarAlbums"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Albums_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artistRoles/{id}" : {
      "get" : {
        "tags" : [ "artistRoles" ],
        "summary" : "Get single artistRole.",
        "description" : "Retrieves single artistRole by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist role id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistRoles_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artistRoles" : {
      "get" : {
        "tags" : [ "artistRoles" ],
        "summary" : "Get multiple artistRoles.",
        "description" : "Retrieves multiple artistRoles by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1"
            }
          },
          "example" : "1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtistRoles_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get single artist.",
        "description" : "Retrieves single artist by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, profileArt, radio, roles, similarArtists, trackProviders, tracks, videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "tags" : [ "artists" ],
        "summary" : "Update single artist.",
        "description" : "Updates existing artist.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistUpdateBody"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artists" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get multiple artists.",
        "description" : "Retrieves multiple artists by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, profileArt, radio, roles, similarArtists, trackProviders, tracks, videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "filter[handle]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on handle attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "jayz"
            }
          },
          "example" : "jayz"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1566"
            }
          },
          "example" : "1566"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/albums" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get albums relationship (\"to-many\").",
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/profileArt" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get profileArt relationship (\"to-many\").",
        "description" : "Retrieves profileArt relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: profileArt",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "profileArt"
            }
          },
          "example" : "profileArt"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "tags" : [ "artists" ],
        "summary" : "Update profileArt relationship (\"to-many\").",
        "description" : "Updates profileArt relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtistProfileArtRelationshipUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/artists/{id}/relationships/radio" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get radio relationship (\"to-many\").",
        "description" : "Retrieves radio relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: radio",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "radio"
            }
          },
          "example" : "radio"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/roles" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get roles relationship (\"to-many\").",
        "description" : "Retrieves roles relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: roles",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "roles"
            }
          },
          "example" : "roles"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/similarArtists" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get similarArtists relationship (\"to-many\").",
        "description" : "Retrieves similarArtists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: similarArtists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "similarArtists"
            }
          },
          "example" : "similarArtists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/trackProviders" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get trackProviders relationship (\"to-many\").",
        "description" : "Retrieves trackProviders relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: trackProviders",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "trackProviders"
            }
          },
          "example" : "trackProviders"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/tracks" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get tracks relationship (\"to-many\").",
        "description" : "Retrieves tracks relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "collapseBy",
          "in" : "query",
          "description" : "Collapse by options for getting artist tracks. Available options: FINGERPRINT, ID. FINGERPRINT option might collapse similar tracks based entry fingerprints while collapsing by ID always returns all available items.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "FINGERPRINT"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: tracks",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "tracks"
            }
          },
          "example" : "tracks"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artists/{id}/relationships/videos" : {
      "get" : {
        "tags" : [ "artists" ],
        "summary" : "Get videos relationship (\"to-many\").",
        "description" : "Retrieves videos relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1566"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "videos"
            }
          },
          "example" : "videos"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artworks/{id}" : {
      "get" : {
        "tags" : [ "artworks" ],
        "summary" : "Get single artwork.",
        "description" : "Retrieves single artwork by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Artwork id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "a468bee88def"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/artworks" : {
      "get" : {
        "tags" : [ "artworks" ],
        "summary" : "Get multiple artworks.",
        "description" : "Retrieves multiple artworks by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Artwork id",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "a468bee88def"
            }
          },
          "example" : "a468bee88def"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "tags" : [ "artworks" ],
        "summary" : "Create single artwork.",
        "description" : "Creates a new artwork.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artworks_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/playlists/{id}" : {
      "get" : {
        "tags" : [ "playlists" ],
        "summary" : "Get single playlist.",
        "description" : "Retrieves single playlist by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          },
          "example" : "coverArt"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "delete" : {
        "tags" : [ "playlists" ],
        "summary" : "Delete single playlist.",
        "description" : "Deletes existing playlist.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "tags" : [ "playlists" ],
        "summary" : "Update single playlist.",
        "description" : "Updates existing playlist.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistUpdateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists" : {
      "get" : {
        "tags" : [ "playlists" ],
        "summary" : "Get multiple playlists.",
        "description" : "Retrieves multiple playlists by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          },
          "example" : "coverArt"
        }, {
          "name" : "filter[r.owners.id]",
          "in" : "query",
          "description" : "User id",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "123456"
            }
          },
          "example" : "123456"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Playlist id",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "550e8400-e29b-41d4-a716-446655440000"
            }
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "tags" : [ "playlists" ],
        "summary" : "Create single playlist.",
        "description" : "Creates a new playlist.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistCreateOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/me" : {
      "get" : {
        "tags" : [ "playlists" ],
        "summary" : "Get current user's playlist(s).",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the filter endpoint: /playlists?filter[r.owners.id]=<userId>\n\nRetrieves current user's playlist(s).",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt, items, owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          },
          "example" : "coverArt"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/{id}/relationships/coverArt" : {
      "get" : {
        "tags" : [ "playlists" ],
        "summary" : "Get coverArt relationship (\"to-many\").",
        "description" : "Retrieves coverArt relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: coverArt",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "coverArt"
            }
          },
          "example" : "coverArt"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/{id}/relationships/items" : {
      "get" : {
        "tags" : [ "playlists" ],
        "summary" : "Get items relationship (\"to-many\").",
        "description" : "Retrieves items relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: items",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          },
          "example" : "items"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Items_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "tags" : [ "playlists" ],
        "summary" : "Add to items relationship (\"to-many\").",
        "description" : "Adds item(s) to items relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItemsRelationshipAddOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "delete" : {
        "tags" : [ "playlists" ],
        "summary" : "Delete from items relationship (\"to-many\").",
        "description" : "Deletes item(s) from items relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItemsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "patch" : {
        "tags" : [ "playlists" ],
        "summary" : "Update items relationship (\"to-many\").",
        "description" : "Updates items relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/playlists/{id}/relationships/owners" : {
      "get" : {
        "tags" : [ "playlists" ],
        "summary" : "Get owners relationship (\"to-many\").",
        "description" : "Retrieves owners relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          },
          "example" : "owners"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/providers/{id}" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Get single provider.",
        "description" : "Retrieves single provider by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Provider id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "771"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Providers_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/providers" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Get multiple providers.",
        "description" : "Retrieves multiple providers by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "771"
            }
          },
          "example" : "771"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Providers_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get single searchResult.",
        "description" : "Retrieves single searchResult by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists, topHits, tracks, videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/albums" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get albums relationship (\"to-many\").",
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/artists" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get artists relationship (\"to-many\").",
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/playlists" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get playlists relationship (\"to-many\").",
        "description" : "Retrieves playlists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: playlists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "playlists"
            }
          },
          "example" : "playlists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/topHits" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get topHits relationship (\"to-many\").",
        "description" : "Retrieves topHits relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: topHits",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "topHits"
            }
          },
          "example" : "topHits"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/tracks" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get tracks relationship (\"to-many\").",
        "description" : "Retrieves tracks relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: tracks",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "tracks"
            }
          },
          "example" : "tracks"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchResults/{id}/relationships/videos" : {
      "get" : {
        "tags" : [ "searchResults" ],
        "summary" : "Get videos relationship (\"to-many\").",
        "description" : "Retrieves videos relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "videos"
            }
          },
          "example" : "videos"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "search.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchSuggestions/{id}" : {
      "get" : {
        "tags" : [ "searchSuggestions" ],
        "summary" : "Get single searchSuggestion.",
        "description" : "Retrieves single searchSuggestion by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: directHits",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "directHits"
            }
          },
          "example" : "directHits"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchSuggestions_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchSuggestions/{id}/relationships/directHits" : {
      "get" : {
        "tags" : [ "searchSuggestions" ],
        "summary" : "Get directHits relationship (\"to-many\").",
        "description" : "Retrieves directHits relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "explicitFilter",
          "in" : "query",
          "description" : "Explicit filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "include, exclude"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: directHits",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "directHits"
            }
          },
          "example" : "directHits"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchSuggestions_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get single searchresult.",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves single searchresult by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists, topHits, tracks, videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}/relationships/albums" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get albums relationship (\"to-many\").",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}/relationships/artists" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get artists relationship (\"to-many\").",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}/relationships/playlists" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get playlists relationship (\"to-many\").",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves playlists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: playlists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "playlists"
            }
          },
          "example" : "playlists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}/relationships/topHits" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get topHits relationship (\"to-many\").",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves topHits relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: topHits",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "topHits"
            }
          },
          "example" : "topHits"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}/relationships/tracks" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get tracks relationship (\"to-many\").",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves tracks relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: tracks",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "tracks"
            }
          },
          "example" : "tracks"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/searchresults/{id}/relationships/videos" : {
      "get" : {
        "tags" : [ "searchresults" ],
        "summary" : "Get videos relationship (\"to-many\").",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the renamed /searchResults/xyz endpoint.\n\nRetrieves videos relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Search query",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "moon"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: videos",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "videos"
            }
          },
          "example" : "videos"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Searchresults_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/trackFiles/{id}" : {
      "get" : {
        "tags" : [ "trackFiles" ],
        "summary" : "Get single trackFile.",
        "description" : "Retrieves single trackFile by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "formats",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "usage",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackFiles_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playback", "r_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/trackManifests/{id}" : {
      "get" : {
        "tags" : [ "trackManifests" ],
        "summary" : "Get single trackManifest.",
        "description" : "Retrieves single trackManifest by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "manifestType",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "formats",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uriScheme",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "usage",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "adaptive",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackManifests_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playback", "r_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "INTERNAL"
        }
      }
    },
    "/tracks/{id}" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get single track.",
        "description" : "Retrieves single track by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Track id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380837"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, radio, similarTracks",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get multiple tracks.",
        "description" : "Retrieves multiple tracks by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, radio, similarTracks",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "filter[isrc]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on isrc attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "USSM12209515"
            }
          },
          "example" : "USSM12209515"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "251380837"
            }
          },
          "example" : "251380837"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/albums" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get albums relationship (\"to-many\").",
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Track id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380837"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/artists" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get artists relationship (\"to-many\").",
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Track id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380837"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/providers" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get providers relationship (\"to-many\").",
        "description" : "Retrieves providers relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Track id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380837"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: providers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "providers"
            }
          },
          "example" : "providers"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/radio" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get radio relationship (\"to-many\").",
        "description" : "Retrieves radio relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Track id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380837"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: radio",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "radio"
            }
          },
          "example" : "radio"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/tracks/{id}/relationships/similarTracks" : {
      "get" : {
        "tags" : [ "tracks" ],
        "summary" : "Get similarTracks relationship (\"to-many\").",
        "description" : "Retrieves similarTracks relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Track id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "251380837"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: similarTracks",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "similarTracks"
            }
          },
          "example" : "similarTracks"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tracks_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}" : {
      "get" : {
        "tags" : [ "userCollections" ],
        "summary" : "Get single userCollection.",
        "description" : "Retrieves single userCollection by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP 47 locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, playlists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "r_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/albums" : {
      "get" : {
        "tags" : [ "userCollections" ],
        "summary" : "Get albums relationship (\"to-many\").",
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP 47 locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Albums_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "user.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "tags" : [ "userCollections" ],
        "summary" : "Add to albums relationship (\"to-many\").",
        "description" : "Adds item(s) to albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipAddOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "delete" : {
        "tags" : [ "userCollections" ],
        "summary" : "Delete from albums relationship (\"to-many\").",
        "description" : "Deletes item(s) from albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/artists" : {
      "get" : {
        "tags" : [ "userCollections" ],
        "summary" : "Get artists relationship (\"to-many\").",
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP 47 locale",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Artists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "user.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "tags" : [ "userCollections" ],
        "summary" : "Add to artists relationship (\"to-many\").",
        "description" : "Adds item(s) to artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipAddOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "delete" : {
        "tags" : [ "userCollections" ],
        "summary" : "Delete from artists relationship (\"to-many\").",
        "description" : "Deletes item(s) from artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userCollections/{id}/relationships/playlists" : {
      "get" : {
        "tags" : [ "userCollections" ],
        "summary" : "Get playlists relationship (\"to-many\").",
        "description" : "Retrieves playlists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: playlists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "playlists"
            }
          },
          "example" : "playlists"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCollections_Playlists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.read", "user.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "post" : {
        "tags" : [ "userCollections" ],
        "summary" : "Add to playlists relationship (\"to-many\").",
        "description" : "Adds item(s) to playlists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionPlaylistsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      },
      "delete" : {
        "tags" : [ "userCollections" ],
        "summary" : "Delete from playlists relationship (\"to-many\").",
        "description" : "Deletes item(s) from playlists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollectionPlaylistsRelationshipRemoveOperation_Payload"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "collection.write", "w_usr" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userEntitlements/{id}" : {
      "get" : {
        "tags" : [ "userEntitlements" ],
        "summary" : "Get single userEntitlement.",
        "description" : "Retrieves single userEntitlement by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntitlements_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "entitlements.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}" : {
      "get" : {
        "tags" : [ "userRecommendations" ],
        "summary" : "Get single userRecommendation.",
        "description" : "Retrieves single userRecommendation by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP47 locale code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: discoveryMixes, myMixes, newArrivalMixes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "discoveryMixes"
            }
          },
          "example" : "discoveryMixes"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/me" : {
      "get" : {
        "tags" : [ "userRecommendations" ],
        "summary" : "Get current user's userRecommendation(s).",
        "description" : "This operation is deprecated and will be removed shortly. Please switch to the equivalent /userRecommendations/{userId} endpoint. You can find your user id by calling /users/me.\n\nRetrieves current user's userRecommendation(s).",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP47 locale code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: discoveryMixes, myMixes, newArrivalMixes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "discoveryMixes"
            }
          },
          "example" : "discoveryMixes"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}/relationships/discoveryMixes" : {
      "get" : {
        "tags" : [ "userRecommendations" ],
        "summary" : "Get discoveryMixes relationship (\"to-many\").",
        "description" : "Retrieves discoveryMixes relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP47 locale code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: discoveryMixes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "discoveryMixes"
            }
          },
          "example" : "discoveryMixes"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}/relationships/myMixes" : {
      "get" : {
        "tags" : [ "userRecommendations" ],
        "summary" : "Get myMixes relationship (\"to-many\").",
        "description" : "Retrieves myMixes relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP47 locale code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: myMixes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "myMixes"
            }
          },
          "example" : "myMixes"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/userRecommendations/{id}/relationships/newArrivalMixes" : {
      "get" : {
        "tags" : [ "userRecommendations" ],
        "summary" : "Get newArrivalMixes relationship (\"to-many\").",
        "description" : "Retrieves newArrivalMixes relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "123456"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "BCP47 locale code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "en-US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: newArrivalMixes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "newArrivalMixes"
            }
          },
          "example" : "newArrivalMixes"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRecommendations_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "recommendations.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/users/me" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get current user's user(s).",
        "description" : "Retrieves current user's user(s).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "user.read" ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}" : {
      "get" : {
        "tags" : [ "videos" ],
        "summary" : "Get single video.",
        "description" : "Retrieves single video by id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Video id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "75623239"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, thumbnailArt",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos" : {
      "get" : {
        "tags" : [ "videos" ],
        "summary" : "Get multiple videos.",
        "description" : "Retrieves multiple videos by available filters, or without if applicable.",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums, artists, providers, thumbnailArt",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "filter[isrc]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on isrc attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "USSM21600755"
            }
          },
          "example" : "USSM21600755"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Allows to filter the collection of resources based on id attribute value",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "75623239"
            }
          },
          "example" : "75623239"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/albums" : {
      "get" : {
        "tags" : [ "videos" ],
        "summary" : "Get albums relationship (\"to-many\").",
        "description" : "Retrieves albums relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Video id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "75623239"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: albums",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "albums"
            }
          },
          "example" : "albums"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/artists" : {
      "get" : {
        "tags" : [ "videos" ],
        "summary" : "Get artists relationship (\"to-many\").",
        "description" : "Retrieves artists relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Video id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "75623239"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: artists",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "artists"
            }
          },
          "example" : "artists"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/providers" : {
      "get" : {
        "tags" : [ "videos" ],
        "summary" : "Get providers relationship (\"to-many\").",
        "description" : "Retrieves providers relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Video id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "75623239"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: providers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "providers"
            }
          },
          "example" : "providers"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    },
    "/videos/{id}/relationships/thumbnailArt" : {
      "get" : {
        "tags" : [ "videos" ],
        "summary" : "Get thumbnailArt relationship (\"to-many\").",
        "description" : "Retrieves thumbnailArt relationship.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Video id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "75623239"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: thumbnailArt",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "thumbnailArt"
            }
          },
          "example" : "thumbnailArt"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Videos_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ ]
        } ],
        "x-path-item-properties" : {
          "required-access-tier" : "THIRD_PARTY"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Albums_Attributes" : {
        "required" : [ "barcodeId", "duration", "explicit", "mediaTags", "numberOfItems", "numberOfVolumes", "popularity", "title", "type" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Album title",
            "example" : "4:44"
          },
          "barcodeId" : {
            "type" : "string",
            "description" : "Barcode id (EAN-13 or UPC-A)",
            "example" : "00854242007552"
          },
          "numberOfVolumes" : {
            "type" : "integer",
            "description" : "Number of volumes",
            "format" : "int32",
            "example" : 1
          },
          "numberOfItems" : {
            "type" : "integer",
            "description" : "Number of items in album",
            "format" : "int32",
            "example" : 13
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO 8601)",
            "example" : "PT46M17S"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : true
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date (ISO-8601)",
            "format" : "date",
            "example" : "2017-06-30"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "popularity" : {
            "type" : "number",
            "description" : "Popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "availability" : {
            "type" : "array",
            "description" : "Available usage for this album",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "mediaTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Media metadata tags",
              "example" : "HIRES_LOSSLESS, LOSSLESS"
            }
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Album image links and metadata",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Image_Link"
            }
          },
          "videoLinks" : {
            "type" : "array",
            "description" : "Album video links and metadata",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Video_Link"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Album links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Album type",
            "enum" : [ "ALBUM", "EP", "SINGLE" ]
          }
        }
      },
      "Albums_Items_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Albums_Items_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Albums_Items_Resource_Identifier_Meta" : {
        "required" : [ "trackNumber", "volumeNumber" ],
        "type" : "object",
        "properties" : {
          "volumeNumber" : {
            "type" : "integer",
            "description" : "volume number",
            "format" : "int32",
            "example" : 1
          },
          "trackNumber" : {
            "type" : "integer",
            "description" : "track number",
            "format" : "int32",
            "example" : 4
          }
        }
      },
      "Albums_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Albums_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              } ]
            }
          }
        }
      },
      "Albums_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              } ]
            }
          }
        }
      },
      "Albums_Relationships" : {
        "required" : [ "artists", "coverArt", "items", "providers", "similarAlbums" ],
        "properties" : {
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "similarAlbums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "coverArt" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "items" : {
            "$ref" : "#/components/schemas/Albums_Items_Multi_Data_Relationship_Document"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Albums_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Albums_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Albums_Relationships"
          }
        }
      },
      "Albums_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Albums_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              } ]
            }
          }
        }
      },
      "ArtistProfileArtRelationshipUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistProfileArtRelationshipUpdateOperation_Payload_Data"
            }
          }
        }
      },
      "ArtistProfileArtRelationshipUpdateOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artworks" ]
          }
        }
      },
      "ArtistRoles_Attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ArtistRoles_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtistRoles_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistRoles_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistRoles_Attributes"
          }
        }
      },
      "ArtistRoles_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistRoles_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ArtistUpdateBody" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtistUpdateBody_Data"
          },
          "meta" : {
            "$ref" : "#/components/schemas/ArtistUpdateBody_Meta"
          }
        }
      },
      "ArtistUpdateBody_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          },
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistUpdateBody_Data_Attributes"
          }
        }
      },
      "ArtistUpdateBody_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "handle" : {
            "type" : "string"
          },
          "externalLinks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          }
        }
      },
      "ArtistUpdateBody_Meta" : {
        "type" : "object",
        "properties" : {
          "dryRun" : {
            "type" : "boolean"
          }
        }
      },
      "Artists_Attributes" : {
        "required" : [ "name", "popularity" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Artist name",
            "example" : "JAY Z"
          },
          "popularity" : {
            "type" : "number",
            "description" : "Artist popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Artist image links and metadata",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Image_Link"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Artist links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "handle" : {
            "type" : "string",
            "description" : "Artist handle",
            "example" : "jayz"
          }
        }
      },
      "Artists_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artists_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/ArtistRoles_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              } ]
            }
          }
        }
      },
      "Artists_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/ArtistRoles_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              } ]
            }
          }
        }
      },
      "Artists_Relationships" : {
        "required" : [ "albums", "profileArt", "radio", "roles", "similarArtists", "trackProviders", "tracks", "videos" ],
        "properties" : {
          "similarArtists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "roles" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "videos" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "profileArt" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "trackProviders" : {
            "$ref" : "#/components/schemas/Artists_TrackProviders_Multi_Data_Relationship_Document"
          },
          "tracks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "radio" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Artists_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Artists_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Artists_Relationships"
          }
        }
      },
      "Artists_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Artists_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/ArtistRoles_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              } ]
            }
          }
        }
      },
      "Artists_TrackProviders_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_TrackProviders_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Artists_TrackProviders_Resource_Identifier_Meta" : {
        "required" : [ "numberOfTracks" ],
        "type" : "object",
        "properties" : {
          "numberOfTracks" : {
            "type" : "integer",
            "description" : "total number of tracks released together with the provider",
            "format" : "int64",
            "example" : 14
          }
        }
      },
      "ArtworkCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload_Data"
          }
        }
      },
      "ArtworkCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "artworks" ]
          },
          "attributes" : {
            "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload_Data_Attributes"
          }
        }
      },
      "ArtworkCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "mediaType", "sourceFile" ],
        "type" : "object",
        "properties" : {
          "mediaType" : {
            "type" : "string",
            "enum" : [ "IMAGE", "VIDEO" ]
          },
          "sourceFile" : {
            "$ref" : "#/components/schemas/ArtworkCreateOperation_Payload_Data_Attributes_SourceFile"
          }
        }
      },
      "ArtworkCreateOperation_Payload_Data_Attributes_SourceFile" : {
        "required" : [ "md5Hash", "size" ],
        "type" : "object",
        "properties" : {
          "md5Hash" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Artwork_File" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "Artwork file href"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Artwork_File_Meta"
          }
        },
        "description" : "Artwork files"
      },
      "Artwork_File_Meta" : {
        "required" : [ "height", "width" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "description" : "Width (in pixels)",
            "format" : "int32",
            "example" : 80
          },
          "height" : {
            "type" : "integer",
            "description" : "Height (in pixels)",
            "format" : "int32",
            "example" : 80
          }
        },
        "description" : "Metadata about an artwork file"
      },
      "Artwork_SourceFile" : {
        "required" : [ "md5Hash", "size", "status", "uploadLink" ],
        "type" : "object",
        "properties" : {
          "md5Hash" : {
            "type" : "string",
            "description" : "MD5 hash of file to be uploaded"
          },
          "size" : {
            "type" : "integer",
            "description" : "File size of the artwork in bytes",
            "format" : "int64"
          },
          "uploadLink" : {
            "$ref" : "#/components/schemas/File_Upload_Link"
          },
          "status" : {
            "$ref" : "#/components/schemas/File_Status"
          }
        },
        "description" : "Artwork source file"
      },
      "Artworks_Attributes" : {
        "required" : [ "files", "mediaType" ],
        "type" : "object",
        "properties" : {
          "mediaType" : {
            "type" : "string",
            "description" : "Media type of artwork files",
            "enum" : [ "IMAGE", "VIDEO" ]
          },
          "sourceFile" : {
            "$ref" : "#/components/schemas/Artwork_SourceFile"
          },
          "files" : {
            "type" : "array",
            "description" : "Artwork files",
            "items" : {
              "$ref" : "#/components/schemas/Artwork_File"
            }
          }
        }
      },
      "Artworks_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artworks_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artworks_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Artworks_Attributes"
          }
        }
      },
      "Artworks_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Artworks_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "AudioNormalizationData" : {
        "type" : "object",
        "properties" : {
          "replayGain" : {
            "type" : "number",
            "format" : "float"
          },
          "peakAmplitude" : {
            "type" : "number",
            "format" : "float"
          }
        },
        "description" : "Track normalization data"
      },
      "DrmData" : {
        "type" : "object",
        "properties" : {
          "drmSystem" : {
            "type" : "string",
            "enum" : [ "FAIRPLAY", "WIDEVINE" ]
          },
          "licenseUrl" : {
            "type" : "string"
          },
          "certificateUrl" : {
            "type" : "string"
          }
        },
        "description" : "DRM data. Absence implies no DRM."
      },
      "Error_Document" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "array of error objects",
            "items" : {
              "$ref" : "#/components/schemas/Error_Object"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        },
        "description" : "JSON:API error document object"
      },
      "Error_Object" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "unique identifier for this particular occurrence of the problem"
          },
          "status" : {
            "type" : "string",
            "description" : "HTTP status code applicable to this problem"
          },
          "code" : {
            "type" : "string",
            "description" : "application-specific error code"
          },
          "detail" : {
            "type" : "string",
            "description" : "human-readable explanation specific to this occurrence of the problem"
          },
          "source" : {
            "$ref" : "#/components/schemas/Error_Object_Source"
          }
        },
        "description" : "JSON:API error object"
      },
      "Error_Object_Source" : {
        "type" : "object",
        "properties" : {
          "pointer" : {
            "type" : "string",
            "description" : "a JSON Pointer [RFC6901] to the value in the request document that caused the error",
            "example" : "/data/attributes/title"
          },
          "parameter" : {
            "type" : "string",
            "description" : "string indicating which URI query parameter caused the error.",
            "example" : "countryCode"
          },
          "header" : {
            "type" : "string",
            "description" : "string indicating the name of a single request header which caused the error",
            "example" : "X-some-custom-header"
          }
        },
        "description" : "object containing references to the primary source of the error"
      },
      "External_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/External_Link_Meta"
          }
        }
      },
      "External_Link_Meta" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "TIDAL_SHARING", "TIDAL_AUTOPLAY_ANDROID", "TIDAL_AUTOPLAY_IOS", "TIDAL_AUTOPLAY_WEB", "TWITTER", "FACEBOOK", "INSTAGRAM", "TIKTOK", "SNAPCHAT", "HOMEPAGE" ]
          }
        },
        "description" : "metadata about an external link"
      },
      "File_Status" : {
        "required" : [ "moderationFileStatus", "technicalFileStatus" ],
        "type" : "object",
        "properties" : {
          "technicalFileStatus" : {
            "type" : "string",
            "description" : "Technical status for file",
            "enum" : [ "UPLOAD_REQUESTED", "PROCESSING", "FAILED", "OK", "ERROR" ]
          },
          "moderationFileStatus" : {
            "type" : "string",
            "description" : "Moderation status for file",
            "enum" : [ "NOT_MODERATED", "SCANNING", "FLAGGED", "TAKEN_DOWN", "OK", "ERROR" ]
          }
        },
        "description" : "File status"
      },
      "File_Upload_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "Href to upload actual file to"
          },
          "meta" : {
            "$ref" : "#/components/schemas/File_Upload_Link_Meta"
          }
        },
        "description" : "Upload link"
      },
      "File_Upload_Link_Meta" : {
        "required" : [ "method" ],
        "type" : "object",
        "properties" : {
          "method" : {
            "type" : "string",
            "description" : "HTTP method"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "HTTP headers that must be added to the operation"
            },
            "description" : "HTTP headers that must be added to the operation"
          }
        },
        "description" : "metadata for upload link"
      },
      "Image_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Image_Link_Meta"
          }
        },
        "deprecated" : true
      },
      "Image_Link_Meta" : {
        "required" : [ "height", "width" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "description" : "image width (in pixels)",
            "format" : "int32",
            "example" : 80
          },
          "height" : {
            "type" : "integer",
            "description" : "image height (in pixels)",
            "format" : "int32",
            "example" : 80
          }
        },
        "description" : "metadata about an image"
      },
      "Links" : {
        "required" : [ "self" ],
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "description" : "the link that generated the current response document",
            "example" : "/artists/xyz/relationships/tracks"
          },
          "next" : {
            "type" : "string",
            "description" : "the next page of data (pagination)",
            "example" : "/artists/xyz/relationships/tracks?page[cursor]=zyx"
          }
        },
        "description" : "Links JSON:API object"
      },
      "Multi_Data_Relationship_Doc" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PlaylistCreateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaylistCreateOperation_Payload_Data"
          }
        }
      },
      "PlaylistCreateOperation_Payload_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "playlists" ]
          },
          "attributes" : {
            "$ref" : "#/components/schemas/PlaylistCreateOperation_Payload_Data_Attributes"
          }
        }
      },
      "PlaylistCreateOperation_Payload_Data_Attributes" : {
        "required" : [ "name", "privacy" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "privacy" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        }
      },
      "PlaylistItemsRelationshipAddOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItemsRelationshipAddOperation_Payload_Data"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipAddOperation_Payload_Meta"
          }
        }
      },
      "PlaylistItemsRelationshipAddOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "videos" ]
          }
        }
      },
      "PlaylistItemsRelationshipAddOperation_Payload_Meta" : {
        "required" : [ "positionBefore" ],
        "type" : "object",
        "properties" : {
          "positionBefore" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItemsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "PlaylistItemsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "videos" ]
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipRemoveOperation_Payload_Data_Meta"
          }
        }
      },
      "PlaylistItemsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload_Data"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload_Meta"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "tracks", "videos" ]
          },
          "meta" : {
            "$ref" : "#/components/schemas/PlaylistItemsRelationshipReorderOperation_Payload_Data_Meta"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "PlaylistItemsRelationshipReorderOperation_Payload_Meta" : {
        "required" : [ "positionBefore" ],
        "type" : "object",
        "properties" : {
          "positionBefore" : {
            "type" : "string"
          }
        }
      },
      "PlaylistUpdateOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaylistUpdateOperation_Payload_Data"
          }
        }
      },
      "PlaylistUpdateOperation_Payload_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "playlists" ]
          },
          "attributes" : {
            "$ref" : "#/components/schemas/PlaylistUpdateOperation_Payload_Data_Attributes"
          }
        }
      },
      "PlaylistUpdateOperation_Payload_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "privacy" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        }
      },
      "Playlists_Attributes" : {
        "required" : [ "bounded", "createdAt", "externalLinks", "imageLinks", "lastModifiedAt", "name", "playlistType", "privacy" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Playlist name"
          },
          "description" : {
            "type" : "string",
            "description" : "Playlist description"
          },
          "bounded" : {
            "type" : "boolean",
            "description" : "Indicates if the playlist has a duration and set number of tracks"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration of playlist (ISO 8601)",
            "example" : "P30M5S"
          },
          "numberOfItems" : {
            "type" : "integer",
            "description" : "Number of items in the playlist",
            "format" : "int32"
          },
          "externalLinks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          },
          "imageLinks" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Image_Link"
            }
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Datetime of playlist creation (ISO 8601)",
            "format" : "date-time"
          },
          "lastModifiedAt" : {
            "type" : "string",
            "description" : "Datetime of last modification of the playlist (ISO 8601)",
            "format" : "date-time"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Privacy setting of the playlist",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          },
          "playlistType" : {
            "type" : "string",
            "description" : "The type of the playlist",
            "enum" : [ "EDITORIAL", "USER", "MIX", "ARTIST" ]
          }
        }
      },
      "Playlists_Items_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Items_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Playlists_Items_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Playlists_Items_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Playlists_Items_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          },
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Playlists_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Users_Resource"
              } ]
            }
          }
        }
      },
      "Playlists_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Users_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "Playlists_Relationships" : {
        "required" : [ "coverArt", "items", "owners" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "coverArt" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "items" : {
            "$ref" : "#/components/schemas/Playlists_Items_Multi_Data_Relationship_Document"
          }
        }
      },
      "Playlists_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Playlists_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Playlists_Relationships"
          }
        }
      },
      "Playlists_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Playlists_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Users_Resource"
              } ]
            }
          }
        }
      },
      "Providers_Attributes" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Provider name",
            "example" : "Columbia/Legacy"
          }
        }
      },
      "Providers_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Providers_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Providers_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Providers_Attributes"
          }
        }
      },
      "Providers_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Providers_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "ResourceObjectObject" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "type" : "object"
          },
          "relationships" : {
            "type" : "object"
          }
        }
      },
      "Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "SearchResults_Attributes" : {
        "required" : [ "trackingId" ],
        "type" : "object",
        "properties" : {
          "trackingId" : {
            "type" : "string",
            "description" : "search request unique tracking number",
            "example" : "5896e37d-e847-4ca6-9629-ef8001719f7f"
          },
          "didYouMean" : {
            "type" : "string",
            "description" : "'did you mean' prompt",
            "example" : "beatles"
          }
        }
      },
      "SearchResults_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchResults_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              } ]
            }
          }
        }
      },
      "SearchResults_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/SearchResults_Resource"
              } ]
            }
          }
        }
      },
      "SearchResults_Relationships" : {
        "required" : [ "albums", "artists", "playlists", "topHits", "tracks", "videos" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "playlists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "videos" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "topHits" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "tracks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "SearchResults_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SearchResults_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/SearchResults_Relationships"
          }
        }
      },
      "SearchResults_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SearchResults_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              } ]
            }
          }
        }
      },
      "SearchSuggestions_Attributes" : {
        "required" : [ "trackingId" ],
        "type" : "object",
        "properties" : {
          "trackingId" : {
            "type" : "string",
            "description" : "Unique tracking id"
          },
          "history" : {
            "type" : "array",
            "description" : "Suggestions from search history",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_History"
            }
          },
          "suggestions" : {
            "type" : "array",
            "description" : "Suggested search queries",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Suggestions"
            }
          }
        }
      },
      "SearchSuggestions_Highlights" : {
        "required" : [ "length", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SearchSuggestions_History" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "highlights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Highlights"
            }
          }
        },
        "description" : "Suggestions from search history"
      },
      "SearchSuggestions_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              } ]
            }
          }
        }
      },
      "SearchSuggestions_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/SearchSuggestions_Resource"
              } ]
            }
          }
        }
      },
      "SearchSuggestions_Relationships" : {
        "required" : [ "directHits" ],
        "properties" : {
          "directHits" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "SearchSuggestions_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SearchSuggestions_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/SearchSuggestions_Relationships"
          }
        }
      },
      "SearchSuggestions_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SearchSuggestions_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              } ]
            }
          }
        }
      },
      "SearchSuggestions_Suggestions" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "highlights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchSuggestions_Highlights"
            }
          }
        },
        "description" : "Suggested search queries"
      },
      "Searchresults_Attributes" : {
        "required" : [ "trackingId" ],
        "type" : "object",
        "properties" : {
          "trackingId" : {
            "type" : "string",
            "description" : "search request unique tracking number",
            "example" : "5896e37d-e847-4ca6-9629-ef8001719f7f"
          },
          "didYouMean" : {
            "type" : "string",
            "description" : "'did you mean' prompt",
            "example" : "beatles"
          }
        }
      },
      "Searchresults_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Searchresults_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              } ]
            }
          }
        }
      },
      "Searchresults_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Searchresults_Resource"
              } ]
            }
          }
        }
      },
      "Searchresults_Relationships" : {
        "required" : [ "albums", "artists", "playlists", "topHits", "tracks", "videos" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "playlists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "videos" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "topHits" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "tracks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Searchresults_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Searchresults_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Searchresults_Relationships"
          }
        }
      },
      "Searchresults_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Searchresults_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              } ]
            }
          }
        }
      },
      "Singleton_Data_Relationship_Doc" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Resource_Identifier"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackFiles_Attributes" : {
        "type" : "object",
        "properties" : {
          "trackPresentation" : {
            "type" : "string",
            "description" : "Track presentation",
            "enum" : [ "FULL", "PREVIEW" ]
          },
          "url" : {
            "type" : "string",
            "description" : "File URL"
          },
          "format" : {
            "type" : "string",
            "description" : "File's audio format",
            "enum" : [ "HEAACV1", "AACLC", "FLAC", "FLAC_HIRES" ]
          },
          "albumAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          },
          "trackAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          }
        }
      },
      "TrackFiles_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackFiles_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackFiles_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/TrackFiles_Attributes"
          }
        }
      },
      "TrackFiles_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackFiles_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackManifests_Attributes" : {
        "type" : "object",
        "properties" : {
          "trackPresentation" : {
            "type" : "string",
            "description" : "Track presentation",
            "enum" : [ "FULL", "PREVIEW" ]
          },
          "uri" : {
            "type" : "string",
            "description" : "Manifest URI"
          },
          "hash" : {
            "type" : "string",
            "description" : "Unique manifest hash"
          },
          "formats" : {
            "type" : "array",
            "description" : "Formats present in manifest",
            "items" : {
              "type" : "string",
              "description" : "Formats present in manifest",
              "enum" : [ "HEAACV1", "AACLC", "FLAC", "FLAC_HIRES" ]
            }
          },
          "drmData" : {
            "$ref" : "#/components/schemas/DrmData"
          },
          "albumAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          },
          "trackAudioNormalizationData" : {
            "$ref" : "#/components/schemas/AudioNormalizationData"
          }
        }
      },
      "TrackManifests_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackManifests_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TrackManifests_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/TrackManifests_Attributes"
          }
        }
      },
      "TrackManifests_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackManifests_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Tracks_Attributes" : {
        "required" : [ "duration", "explicit", "isrc", "mediaTags", "popularity", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Track title",
            "example" : "Kill Jay Z"
          },
          "version" : {
            "type" : "string",
            "description" : "Track version, complements title",
            "example" : "original, mix etc"
          },
          "isrc" : {
            "type" : "string",
            "description" : "International Standard Recording Code (ISRC)",
            "example" : "QMJMT1701229"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO 8601)",
            "example" : "PT2M58S"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : false
          },
          "popularity" : {
            "type" : "number",
            "description" : "Popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "key" : {
            "type" : "string",
            "description" : "Key",
            "enum" : [ "A", "B", "C", "D", "E", "F", "G" ]
          },
          "keyScale" : {
            "type" : "string",
            "description" : "The scale of the key",
            "enum" : [ "MAJOR", "MINOR" ]
          },
          "bpm" : {
            "type" : "number",
            "description" : "Beats per minute",
            "format" : "float",
            "example" : 60.0
          },
          "availability" : {
            "type" : "array",
            "description" : "Available usage for this track",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "mediaTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Media metadata tags",
              "example" : "HIRES_LOSSLESS ,LOSSLESS"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Track links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          }
        }
      },
      "Tracks_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tracks_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "Tracks_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "Tracks_Relationships" : {
        "required" : [ "albums", "artists", "providers", "radio", "similarTracks" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "similarTracks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "radio" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Tracks_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Tracks_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Tracks_Relationships"
          }
        }
      },
      "Tracks_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tracks_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "UserCollectionAlbumsRelationshipAddOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipAddOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionAlbumsRelationshipAddOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          }
        }
      },
      "UserCollectionAlbumsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "albums" ]
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data_Meta"
          }
        }
      },
      "UserCollectionAlbumsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollectionArtistsRelationshipAddOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipAddOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionArtistsRelationshipAddOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          }
        }
      },
      "UserCollectionArtistsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionArtistsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "meta", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "artists" ]
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollectionArtistsRelationshipRemoveOperation_Payload_Data_Meta"
          }
        }
      },
      "UserCollectionArtistsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollectionPlaylistsRelationshipRemoveOperation_Payload" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "maxItems" : 20,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data"
            }
          }
        }
      },
      "UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "playlists" ]
          }
        }
      },
      "UserCollectionPlaylistsRelationshipRemoveOperation_Payload_Data_Meta" : {
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          }
        }
      },
      "UserCollections_Albums_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Albums_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Albums_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollections_Albums_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "UserCollections_Albums_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          },
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UserCollections_Artists_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Artists_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Artists_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollections_Artists_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "UserCollections_Artists_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          },
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UserCollections_Attributes" : {
        "type" : "object"
      },
      "UserCollections_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              } ]
            }
          }
        }
      },
      "UserCollections_Playlists_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserCollections_Playlists_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserCollections_Playlists_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/UserCollections_Playlists_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "UserCollections_Playlists_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string"
          },
          "addedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UserCollections_Relationships" : {
        "required" : [ "albums", "artists", "playlists" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/UserCollections_Albums_Multi_Data_Relationship_Document"
          },
          "artists" : {
            "$ref" : "#/components/schemas/UserCollections_Artists_Multi_Data_Relationship_Document"
          },
          "playlists" : {
            "$ref" : "#/components/schemas/UserCollections_Playlists_Multi_Data_Relationship_Document"
          }
        }
      },
      "UserCollections_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UserCollections_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserCollections_Relationships"
          }
        }
      },
      "UserCollections_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserCollections_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Albums_Resource"
              } ]
            }
          }
        }
      },
      "UserEntitlements_Attributes" : {
        "required" : [ "entitlements" ],
        "type" : "object",
        "properties" : {
          "entitlements" : {
            "type" : "array",
            "description" : "entitlements for user",
            "items" : {
              "type" : "string",
              "description" : "entitlements for user",
              "enum" : [ "MUSIC", "DJ" ]
            }
          }
        }
      },
      "UserEntitlements_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserEntitlements_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserEntitlements_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UserEntitlements_Attributes"
          }
        }
      },
      "UserEntitlements_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserEntitlements_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserRecommendations_Attributes" : {
        "type" : "object"
      },
      "UserRecommendations_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserRecommendations_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "UserRecommendations_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Playlists_Resource"
              }, {
                "$ref" : "#/components/schemas/UserRecommendations_Resource"
              } ]
            }
          }
        }
      },
      "UserRecommendations_Relationships" : {
        "required" : [ "discoveryMixes", "myMixes", "newArrivalMixes" ],
        "properties" : {
          "discoveryMixes" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "newArrivalMixes" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "myMixes" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "UserRecommendations_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UserRecommendations_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserRecommendations_Relationships"
          }
        }
      },
      "UserRecommendations_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserRecommendations_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "Users_Attributes" : {
        "required" : [ "country", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "user name",
            "example" : "username"
          },
          "country" : {
            "type" : "string",
            "description" : "ISO 3166-1 alpha-2 country code",
            "example" : "US"
          },
          "email" : {
            "type" : "string",
            "description" : "email address",
            "example" : "test@test.com"
          },
          "emailVerified" : {
            "type" : "boolean",
            "description" : "Is the email verified",
            "example" : true
          },
          "firstName" : {
            "type" : "string",
            "description" : "Users first name",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Users last name",
            "example" : "Rambo"
          },
          "nostrPublicKey" : {
            "type" : "string",
            "description" : "Users nostr public key",
            "example" : "e3fc3965800f9c729b483a2a7291f30e569fbf5ab91a6eef332f9e28a5e923dd"
          }
        }
      },
      "Users_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Users_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Users_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Users_Attributes"
          }
        }
      },
      "Users_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Users_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Video_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Video_Link_Meta"
          }
        },
        "deprecated" : true
      },
      "Video_Link_Meta" : {
        "required" : [ "height", "width" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "description" : "video width (in pixels)",
            "format" : "int32",
            "example" : 80
          },
          "height" : {
            "type" : "integer",
            "description" : "video height (in pixels)",
            "format" : "int32",
            "example" : 80
          }
        },
        "description" : "metadata about a video"
      },
      "Videos_Attributes" : {
        "required" : [ "duration", "explicit", "isrc", "popularity", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Video title",
            "example" : "Kill Jay Z"
          },
          "version" : {
            "type" : "string",
            "description" : "Video version, complements title",
            "example" : "original, mix etc"
          },
          "isrc" : {
            "type" : "string",
            "description" : "International Standard Recording Code (ISRC)",
            "example" : "TIDAL2274"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO 8601)",
            "example" : "PT2M58S"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date (ISO-8601)",
            "format" : "date",
            "example" : "2017-06-27"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Explicit content",
            "example" : false
          },
          "popularity" : {
            "type" : "number",
            "description" : "Popularity (0.0 - 1.0)",
            "format" : "double",
            "example" : 0.56
          },
          "availability" : {
            "type" : "array",
            "description" : "Available usage for this video",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Video image links and metadata",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Image_Link"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Video links external to TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/External_Link"
            }
          }
        }
      },
      "Videos_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Videos_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              } ]
            }
          }
        }
      },
      "Videos_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              } ]
            }
          }
        }
      },
      "Videos_Relationships" : {
        "required" : [ "albums", "artists", "providers", "thumbnailArt" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "thumbnailArt" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Videos_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Videos_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Videos_Relationships"
          }
        }
      },
      "Videos_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Videos_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Albums_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Providers_Resource"
              }, {
                "$ref" : "#/components/schemas/Artworks_Resource"
              } ]
            }
          }
        }
      }
    },
    "examples" : {
      "Unsupported_Media_Type_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"880e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"415\",\n      \"code\": \"UNSUPPORTED_MEDIA_TYPE\",\n      \"detail\": \"Unsupported request media type: application/json. Expected media type format: application/vnd.api+json\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Bad_Request_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"400\",\n      \"code\": \"INVALID_ENUM_VALUE\",\n      \"detail\": \"country code must be in ISO2 format\",\n      \"source\": {\n        \"parameter\": \"countryCode\"\n      },\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    },\n    {\n      \"id\": \"770e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"400\",\n      \"code\": \"VALUE_REGEX_MISMATCH\",\n      \"detail\": \"barcode should have a valid EAN-13 or UPC-A format\",\n      \"source\": {\n        \"parameter\": \"filter[barcodeId]\"\n      },\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Conflict_Request_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"409\",\n      \"code\": \"CONFLICT\",\n      \"detail\": \"The handle provided is already in use. Please choose a different handle.\",\n      \"source\": {\n        \"parameter\": \"handle\"\n      },\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    },\n    {\n      \"id\": \"a11e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"409\",\n      \"code\": \"CONFLICT\",\n      \"detail\": \"The name provided already exists. Please use a different name.\",\n      \"source\": {\n        \"parameter\": \"name\"\n      },\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Internal_Server_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"120e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"500\",\n      \"code\": \"INTERNAL_SERVER_ERROR\",\n      \"detail\": \"The service encountered an error\",\n      \"meta\": {\n        \"category\": \"API_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Not_Acceptable_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"570e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"406\",\n      \"code\": \"NOT_ACCEPTABLE\",\n      \"detail\": \"Not acceptable response media type on client: application/xml\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Method_Not_Supported_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"320e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"405\",\n      \"code\": \"METHOD_NOT_SUPPORTED\",\n      \"detail\": \"The resource doesnt support the requested HTTP method: POST\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Resource_Not_Found_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"770e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"404\",\n      \"code\": \"NOT_FOUND\",\n      \"detail\": \"Resource for a given 'id' is not found\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Unavailable_For_Legal_Reasons_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"490e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"451\",\n      \"code\": \"UNAVAILABLE_FOR_LEGAL_REASONS_RESPONSE\",\n      \"detail\": \"Unavailable due to demand from the right-holders to prohibit access to the resource.\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      }
    },
    "securitySchemes" : {
      "Authorization_Code_PKCE" : {
        "type" : "oauth2",
        "description" : "See https://developer.tidal.com/documentation/authorization/authorization-authorization-code",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://login.tidal.com/authorize",
            "tokenUrl" : "https://auth.tidal.com/v1/oauth2/token",
            "scopes" : {
              "user.read" : "Read access to a user's account information, such as country and email address.",
              "collection.read" : "Read access to a user's \"My Collection\".",
              "search.read" : "Required to read personalized search results.",
              "playlists.write" : "Write access to a user's playlists.",
              "collection.write" : "Write access to a user's \"My Collection\".",
              "playlists.read" : "Required to list playlists created by a user.",
              "playback" : "Required to play media content and control playback.",
              "recommendations.read" : "Read access to a user’s personal recommendations.",
              "entitlements.read" : "Read access to what functionality a user is entitled to access on TIDAL, such as whether they can stream music, use DJ add-ons and similar.",
              "search.write" : "Required to update personalized search results, e.g. delete search history."
            },
            "x-scopes-required-access-tier" : {
              "user.read" : "THIRD_PARTY",
              "collection.read" : "THIRD_PARTY",
              "search.read" : "THIRD_PARTY",
              "playlists.write" : "THIRD_PARTY",
              "collection.write" : "THIRD_PARTY",
              "playlists.read" : "THIRD_PARTY",
              "playback" : "THIRD_PARTY",
              "recommendations.read" : "THIRD_PARTY",
              "entitlements.read" : "THIRD_PARTY",
              "search.write" : "THIRD_PARTY"
            }
          }
        }
      },
      "Client_Credentials" : {
        "type" : "oauth2",
        "description" : "See https://developer.tidal.com/documentation/authorization/authorization-client-credentials",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://auth.tidal.com/v1/oauth2/token",
            "scopes" : { }
          }
        }
      }
    }
  }
}