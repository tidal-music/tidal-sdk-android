/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.tidal.sdk.catalogue.generated.models

import com.tidal.sdk.catalogue.generated.models.AlbumAttributes
import com.tidal.sdk.catalogue.generated.models.ArtistAttributes
import com.tidal.sdk.catalogue.generated.models.ExternalLink
import com.tidal.sdk.catalogue.generated.models.ImageLink
import com.tidal.sdk.catalogue.generated.models.ProviderAttributes
import com.tidal.sdk.catalogue.generated.models.TrackAttributes
import com.tidal.sdk.catalogue.generated.models.VideoLink

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * attributes object representing some of the resource's data
 *
 * @param title Album item's title
 * @param barcodeId Barcode id (EAN-13 or UPC-A)
 * @param numberOfVolumes Number of volumes
 * @param numberOfItems Number of album items
 * @param duration Duration expressed in accordance with ISO 8601
 * @param explicit Indicates whether a catalog item consist of any explicit content
 * @param popularity Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible
 * @param mediaTags 
 * @param name Provider name. Conditionally visible.
 * @param isrc ISRC code
 * @param releaseDate Release date (ISO-8601)
 * @param copyright Copyright information
 * @param availability Defines a catalog item availability e.g. for streaming, DJs, stems
 * @param imageLinks Represents available links to, and metadata about, an artist images
 * @param videoLinks Represents available links to, and metadata about, an album cover videos
 * @param externalLinks Represents available links to something that is related to a catalog item, but external to the TIDAL API
 * @param version Version of the album's item; complements title
 */
@Serializable

data class TrackRelationship (

    /* Album item's title */
    @SerialName(value = "title")
    val title: kotlin.String,

    /* Barcode id (EAN-13 or UPC-A) */
    @SerialName(value = "barcodeId")
    val barcodeId: kotlin.String,

    /* Number of volumes */
    @SerialName(value = "numberOfVolumes")
    val numberOfVolumes: kotlin.Int,

    /* Number of album items */
    @SerialName(value = "numberOfItems")
    val numberOfItems: kotlin.Int,

    /* Duration expressed in accordance with ISO 8601 */
    @SerialName(value = "duration")
    val duration: kotlin.String,

    /* Indicates whether a catalog item consist of any explicit content */
    @SerialName(value = "explicit")
    val explicit: kotlin.Boolean,

    /* Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible */
    @SerialName(value = "popularity")
    val popularity: kotlin.Double,

    @SerialName(value = "mediaTags")
    val mediaTags: kotlin.collections.List<kotlin.String>,

    /* Provider name. Conditionally visible. */
    @SerialName(value = "name")
    val name: kotlin.String,

    /* ISRC code */
    @SerialName(value = "isrc")
    val isrc: kotlin.String,

    /* Release date (ISO-8601) */
    @Contextual @SerialName(value = "releaseDate")
    val releaseDate: java.time.LocalDate? = null,

    /* Copyright information */
    @SerialName(value = "copyright")
    val copyright: kotlin.String? = null,

    /* Defines a catalog item availability e.g. for streaming, DJs, stems */
    @SerialName(value = "availability")
    val availability: kotlin.collections.List<TrackRelationship.Availability>? = null,

    /* Represents available links to, and metadata about, an artist images */
    @SerialName(value = "imageLinks")
    val imageLinks: kotlin.collections.List<ImageLink>? = null,

    /* Represents available links to, and metadata about, an album cover videos */
    @SerialName(value = "videoLinks")
    val videoLinks: kotlin.collections.List<VideoLink>? = null,

    /* Represents available links to something that is related to a catalog item, but external to the TIDAL API */
    @SerialName(value = "externalLinks")
    val externalLinks: kotlin.collections.List<ExternalLink>? = null,

    /* Version of the album's item; complements title */
    @SerialName(value = "version")
    val version: kotlin.String? = null

) {

    /**
     * Defines a catalog item availability e.g. for streaming, DJs, stems
     *
     * Values: STREAM,DJ,STEM
     */
    @Serializable
    enum class Availability(val value: kotlin.String) {
        @SerialName(value = "STREAM") STREAM("STREAM"),
        @SerialName(value = "DJ") DJ("DJ"),
        @SerialName(value = "STEM") STEM("STEM");
    }
}

